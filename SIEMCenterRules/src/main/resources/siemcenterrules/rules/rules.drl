package siemcenterrules.rules;

import java.util.List;
import java.time.LocalDateTime;
import com.securityoperationscenter.siemcenter.model.Log;
import com.securityoperationscenter.siemcenter.model.ErrorLog;
import com.securityoperationscenter.siemcenter.model.LoginLog;
import com.securityoperationscenter.siemcenter.model.AntivirusThreatDetectionLog;

global List maliciousIpAddresses;

rule "Detect when ErrorLog appears"
    when
       ErrorLog()
    then
      System.out.println("RULE FIRED: Detect when ErrorLog appears.");
end

rule "Three unsuccessful logins with the same username"
    when
        $log: LoginLog(successful != true, $username: username)

        Number(intValue >= 3) from accumulate(
            $logs: LoginLog(
                successful != true,
                username == $username
            ),
            count($logs)
        )
    then
        System.out.println("RULE FIRED: Three unsuccessful logins with the same username.");
end

rule "Fifteen unsuccessful logins from the same ip in five days"
    when
        $log: LoginLog(
            successful != true,
            $ip: machine.ip,
            timestamp.isAfter(LocalDateTime.now().minusDays(5))
        )
        not LoginLog(
            successful != true,
            $ip == machine.ip,
            timestamp.isAfter(LocalDateTime.now().minusDays(5)),
            timestamp.isAfter($log.getTimestamp())
        )

        Number(intValue >= 15) from accumulate(
            $logs: LoginLog(
                successful != true,
                $ip == machine.ip,
                timestamp.isAfter(LocalDateTime.now().minusDays(5))
            ),
            count($logs)
        )
    then
        System.out.println("RULE FIRED: Fifteen unsuccessful logins from the same ip in five days.");
end

rule "Login from account inactive for 90 days"
    when
        $log: LoginLog($username : username)
        not LoginLog(username == $username, timestamp.isAfter($log.getTimestamp()))
        not LoginLog(username == $username, successful == true, timestamp.isAfter(LocalDateTime.now().minusDays(90)))
    then
        System.out.println("RULE FIRED: Login from account inactive for 90 days.");
end

rule "Seven antivirus threats from same machine"
    when
      threat: AntivirusThreatDetectionLog($machine: machine, $timestamp: timestamp )
      not AntivirusThreatDetectionLog(machine.ip == $machine.ip, timestamp.isAfter($timestamp))

      Number(intValue >= 7) from accumulate(
          $threats: AntivirusThreatDetectionLog(
              machine.ip == $machine.ip,
              timestamp.isAfter(LocalDateTime.now().minusDays(10)),
              !timestamp.isAfter(LocalDateTime.now())
          ),
          count($threats)
      )
    then
      System.out.println("RULE FIRED: Seven antivirus threats from same machine.");
end

rule "Detect malicious ip address"
    when
        Log(machine.ip memberOf maliciousIpAddresses)
    then
        System.out.println("RULE FIRED: Detect malicious ip address.");
end
